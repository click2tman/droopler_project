<?php
/**
 * @file
 * Install, update and uninstall functions for the profilename install profile.
 */



/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function droopler_install() {
  // First, do everything in standard profile.
  include_once DRUPAL_ROOT . '/core/profiles/standard/standard.install';
  standard_install();

  \Drupal::configFactory()
    ->getEditable('system.theme')
    ->set('default', 'droopler_theme')
    ->set('admin', 'seven')
    ->save();

  // @TODO this should not really be here because this subtheme is not part
  // of the distribution
  $themes = \Drupal::service('theme_handler')->listInfo();
  if(isset($themes['droopler_subtheme'])) {
    \Drupal::configFactory()
      ->getEditable('system.theme')
      ->set('default', 'droopler_subtheme')
      ->set('admin', 'seven')
      ->save();
  }

  \Drupal::configFactory()
    ->getEditable('system.site')
    ->set('default_langcode', 'en')
    ->set('page.front', '/node/1')
    ->save();

  // Install init content. It will add an install task to be performed later.
  \Drupal::service('module_installer')->install(['d_content_init']);

  // If subtheme is available install the blog.
  // @TODO this should not really be here because this subtheme is not part of the distribution
  if (isset($themes['droopler_subtheme'])) {
    \Drupal::service('module_installer')->install(['d_blog']);
    \Drupal::service('module_installer')->install(['d_blog_init']);

    // Setup Linkit to work with blog
    $linkit = \Drupal::configFactory()->getEditable('linkit.linkit_profile.content_nodes');
    $matchers = $linkit->get("matchers");
    $keys = array_keys($matchers);
    $uuid = reset($keys);
    $linkit->set("matchers.$uuid.settings.bundles.blog_post", "blog_post")->save();
  }

  // Try to install custom init that alters the original one.
  try {
    \Drupal::service('module_installer')->install(['d_custom_init']);
  }
  catch (\Drupal\Core\Extension\MissingDependencyException $e) {
    \Drupal::logger('droopler_install')->notice('Custom content init not detected.');
  }

  // Apply updates.
  try {
    \Drupal::entityDefinitionUpdateManager()->applyUpdates();
  }
  catch (\Drupal\Core\Entity\EntityStorageException $e) {
    watchdog_exception('droopler_install', $e);
  }
}

/**
 * Implements hook_install_tasks()
 */
function droopler_install_tasks() {
  $tasks = [
    'd_content_init_create_all' => [
      'display' => TRUE,
      'display_name' => t('Init content'),
      'type' => 'normal',
    ],
    'd_content_init_add_footer' => [
      'display' => TRUE,
      'display_name' => t('Add footer'),
      'type' => 'normal',
    ],
  ];

  return $tasks;
}

/**
 * Import a config file.
 * @todo To be moved to a new manager class.
 *
 * @param string $module
 *  Module name.
 * @param string $name
 *  Config file name without .yml extension.
 */
function _droopler_import_config($module, $name) {
  $config_path = drupal_get_path('module', $module) . '/config/install';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');
  $config_storage->write($name, $source->read($name));
}

/**
 * Droopler 1.3 Updates.
 */
function droopler_update_8101() {
  // Install modules.
  $modules = [
    'd_p_counters',
    'd_p_help',
  ];
  \Drupal::service('module_installer')->install($modules, TRUE);

  // Install config.
  _droopler_import_config('d_content', 'field.field.node.content_page.field_page_section');
}
